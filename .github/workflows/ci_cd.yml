name: Frontend CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test_and_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js environment (Node 22)
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install project dependencies
        run: yarn install --frozen-lockfile

      - name: Run ESLint for code linting
        run: yarn lint

      - name: Run unit tests with Vitest
        run: yarn test

      - name: Build production version app
        run: yarn build

      - name: Build Docker image for oneeloom app
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/oneeloom .
        env:
          DOCKER_BUILDKIT: 1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/oneeloom

      - name: Notify Telegram Bot about successful build
        if: ${{ success() }}
        run: |
          curl -X POST "${{ secrets.WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d @- <<EOF
          {
            "event": "ci_cd_notification",
            "status": "success",
            "repository": "${{ github.repository }}",
            "run_id": "${{ github.run_id }}",
            "workflow": "${{ github.workflow }}",
            "commit_url": "${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}",
            "docker_image": "${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest",
            "message": "Build and deployment completed successfully! ðŸš€"
          }
          EOF

      # API Service Integration (example)
      # - name: Build API service integration
      #  uses: docker/build-push-action@v4
      #  with:
      #    context: ./api
      #    file: ./api/Dockerfile
      #    push: true
      #    tags: project-name/your-api:latest
